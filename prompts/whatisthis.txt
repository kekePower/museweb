# The MuseWeb Paradigm

MuseWeb explores a simple yet powerful question: What if creating and managing a website was as intuitive as writing a letter? At its core, MuseWeb is an **experimental, prompt-driven web engine** that crafts and streams entire web pages directly from plain-text prompts, using a large-language model as its creative partner. It was built to explore what becomes possible when the barrier between an idea and a published page is reduced to its absolute minimum.

---

## A Different Approach: The Engine and The Soul

Unlike traditional systems that rely on complex databases or content management systems, MuseWeb proposes a radical separation of concerns, distilled into two core components:

* **The Engine:** A fast, reliable, and lightweight core written in Go. It exists as a single binary with no external dependencies, and its only job is to handle requests and stream responses from the model token-by-token for an instant user experience.

* **The Soul:** The entire personality, knowledge, and content of the website lives in a simple folder of plain-text prompts. Each `.txt` file becomes a page, with special files like `system_prompt.txt` and `layout.txt` defining the site's global rules and design.

This architecture means the engine is the robust, unchanging foundation, while the soul is fluid, dynamic, and can be changed by anyone who can edit a text file.

---

## What This Unlocks

This prompt-driven philosophy isn't just a technical curiosity; it unlocks a more direct and creative way to publish on the web.

* **Content as Conversation**
    Instead of fighting with editors or templates, you guide your website's creation through instruction. Each prompt is a conversation that results in a unique, dynamically generated page.

* **Instant Iteration**
    Because MuseWeb loads prompts from the disk on every request, you can edit your text files and see the changes reflected instantly on the site without ever restarting the server. This creates an incredibly fluid and responsive workflow.

* **Radical Simplicity**
    The entire system is a single, small binary and a folder of text files. There is no database to manage, no complex backend to configure, and zero JavaScript served by default, embodying a truly minimal and self-hosted approach to publishing.

* **Ultimate Flexibility**
    MuseWeb is backend-agnostic. You can run it entirely on your own hardware using a local model via Ollama, or connect it to any OpenAI-compatible API to leverage more powerful models. The control remains entirely with you.

---

## A Glimpse into the Future

While it began as an experiment "just for fun," MuseWeb serves as a proof-of-concept for a future where web publishing is more accessible, personal, and deeply integrated with the creative potential of language models. Itâ€™s a tangible demonstration of the endless possibilities that emerge when you combine a minimalist ethos with powerful, self-hosted technology.